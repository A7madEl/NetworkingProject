@model IEnumerable<Book>
@{
    ViewBag.Title = "Books";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .book-price {
        display: flex;
        gap: 0.5rem; /* Space between buttons */
        margin-top: 1rem; /* Add some space above the buttons */
    }

    .btn-add-to-cart, .btn-borrow, .btn-buy {
        padding: 0.25rem 0.5rem; /* Smaller padding */
        font-size: 0.8rem; /* Smaller font size */
        border-radius: 5px; /* Rounded corners */
        text-align: center;
        white-space: nowrap; /* Prevent text from wrapping */
    }

    .btn-add-to-cart {
        background-color: #007bff; /* Blue color */
        color: white;
        border: 1px solid #007bff;
    }

    .btn-borrow {
        background-color: #28a745; /* Green color */
        color: white;
        border: 1px solid #28a745;
    }

    .btn-buy {
        background-color: #dc3545; /* Red color */
        color: white;
        border: 1px solid #dc3545;
    }

        .btn-add-to-cart:hover, .btn-borrow:hover, .btn-buy:hover {
            opacity: 0.8; /* Slightly transparent on hover */
        }
</style>

<h1>Books</h1>

<!-- Filter Form -->
<form method="get" asp-action="UserIndex">
    <div class="form-group">
        <label for="category">Filter by Category:</label>
        <select id="category" name="category" class="form-control">
            <option value="">All</option>
            @foreach (var category in ViewBag.Categories)
            {
                var isSelected = category == ViewBag.SelectedCategory ? "selected" : null;
                <option value="@category" selected="@isSelected">@category</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label for="searchQuery">Search:</label>
        <input type="text" id="searchQuery" name="searchQuery" class="form-control" value="@ViewBag.SearchQuery" onkeyup="searchBooks()" placeholder="Search for books...">
    </div>
    <button type="submit" class="btn btn-primary">Filter</button>
</form>

<!-- Books List -->
<div id="bookList" class="book-list mt-4">
    @foreach (var book in Model)
    {
        <a asp-action="Details" asp-route-id="@book.BookId">
            <div class="book-card">
                <img src="@Url.Content("~/images/" + book.ImageUrl)" alt="@book.Description" />
                <div class="book-card-body">
                    <h5>@book.Title</h5>
                    <p>@book.Description</p>
                    <p><strong>Published:</strong> @book.YearPublished</p>
                    <p><strong>Category:</strong> @book.Category</p>
                    <div>
                        @if (book.DiscountEndDate.HasValue && book.DiscountEndDate.Value > DateTime.Now)
                        {
                            <p class="card-text" style="color: #dc3545; font-weight: bold; font-size: 1rem;">Discount ends in: <span id="countdown-@book.BookId"></span></p>
                            var originalPrice = book.BuyPrice / (1 - (book.DiscountPrice.Value / 100));

                            <p class="card-text" style="color: #dc3545; font-weight: bold; font-size: 1.2rem;">
                                <span>@book.DiscountPrice.Value% off</span>
                            </p>

                            <p class="card-text" style="color: #dc3545; font-weight: bold; font-size: 1.2rem;">
                                <span style="text-decoration: line-through; color: #6c757d;">@originalPrice.ToString("c")</span>
                            </p>

                            <!-- Pass BookId and DiscountEndDate to JavaScript -->
                           
                        }
                        <div>
                            <p style="color: #28a745;">Borrow price: @book.BorrowPrice.ToString("c")</p>
                            <p style="color: #28a745;">Buy price: @book.BuyPrice.ToString("c")</p>
                        </div>

                        <div class="book-price">
                            <button type="button" class="btn btn-add-to-cart" data-toggle="modal" data-target="#addToCartModal">Add to Cart</button>
                            <a asp-action="AddEdit" asp-route-id="@book.BookId" class="btn btn-borrow">Borrow</a>
                            <a asp-action="AddEdit" asp-route-id="@book.BookId" class="btn btn-buy">Buy</a>
                        </div>
                    </div>
                </div>
            </div>
        </a>
        <script>
            // Countdown timer for each book
            var countdownDate = new Date('@book.DiscountEndDate.Value.ToString("yyyy-MM-ddTHH:mm:ss")').getTime();

            var x = setInterval(function() {
                var now = new Date().getTime();
                var distance = countdownDate - now;

                var days = Math.floor(distance / (1000 * 60 * 60 * 24));
                var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                var seconds = Math.floor((distance % (1000 * 60)) / 1000);

                // Display the countdown
                document.getElementById("countdown-@book.BookId").innerHTML = days + "d " + hours + "h "
                    + minutes + "m " + seconds + "s ";

                // If the countdown is finished
                if (distance < 0) {
                    clearInterval(x);
                    document.getElementById("countdown-@book.BookId").innerHTML = "EXPIRED";
                }
            }, 1000);
        </script>
    }
   </div>

<script>
    function searchBooks() {
        var searchQuery = document.getElementById('searchQuery').value;
        var category = document.getElementById('category').value;

        $.ajax({
            url: '@Url.Action("UserIndex", "Book")',
            type: 'GET',
            data: { category: category, searchQuery: searchQuery },
            success: function (result) {
                $('#bookList').html(result);
            }
        });
    }
</script>
